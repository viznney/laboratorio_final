/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;


import DTOs.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;

//import <default package>

/**
 *
 * @author Andres
 */
public class ABMTipoImpuesto78 extends javax.swing.JFrame {

    /**
     * Creates new form ABMTipoImpuesto
     */
    private ControladorABMTipoImpuesto controlador = new ControladorABMTipoImpuesto();
    public ABMTipoImpuesto78() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        lstAtributoSeleccionado = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombreTipoImpuesto = new javax.swing.JTextField();
        chkImporteEditable = new javax.swing.JCheckBox();
        btnCrearImpuesto = new javax.swing.JButton();
        btnModificarTipoImpuesto = new javax.swing.JButton();
        btnEliminarTipoImpuesto = new javax.swing.JButton();
        btnOrdenSubir = new javax.swing.JButton();
        btnOrdenBajar = new javax.swing.JButton();
        lblCodigo = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstAtributoExcluido = new javax.swing.JList<>();
        btnAgregar = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        cod = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lstAtributoSeleccionado.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstAtributoSeleccionado.setEnabled(false);
        jScrollPane2.setViewportView(lstAtributoSeleccionado);

        jLabel2.setText("Atributos seleccionados");

        jLabel3.setText("Nombre");

        chkImporteEditable.setText("Importe Editable");

        btnCrearImpuesto.setText("CrearImpuesto");
        btnCrearImpuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearImpuestoActionPerformed(evt);
            }
        });

        btnModificarTipoImpuesto.setText("Modificar");
        btnModificarTipoImpuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarTipoImpuestoActionPerformed(evt);
            }
        });

        btnEliminarTipoImpuesto.setText("Eliminar");
        btnEliminarTipoImpuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTipoImpuestoActionPerformed(evt);
            }
        });

        btnOrdenSubir.setText("Subir");
        btnOrdenSubir.setEnabled(false);
        btnOrdenSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenSubirActionPerformed(evt);
            }
        });

        btnOrdenBajar.setText("Bajar");
        btnOrdenBajar.setEnabled(false);
        btnOrdenBajar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenBajarActionPerformed(evt);
            }
        });

        lblCodigo.setText("Codigo:");

        lstAtributoExcluido.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstAtributoExcluido.setEnabled(false);
        jScrollPane3.setViewportView(lstAtributoExcluido);

        btnAgregar.setText("Agregar");
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnQuitar.setText("Quitar");
        btnQuitar.setEnabled(false);
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        jLabel4.setText("Atributos excluidos");

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        cod.setText("Codigo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(cod))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkImporteEditable)
                            .addComponent(txtNombreTipoImpuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCodigo)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCrearImpuesto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModificarTipoImpuesto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminarTipoImpuesto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnOrdenBajar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOrdenSubir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnQuitar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar)))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 48, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnQuitar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGuardar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCodigo)
                                    .addComponent(cod))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(txtNombreTipoImpuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chkImporteEditable)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnCrearImpuesto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnModificarTipoImpuesto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEliminarTipoImpuesto))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnOrdenSubir)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnOrdenBajar)
                                        .addGap(25, 25, 25)))))
                        .addGap(0, 100, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void start(){
        lstAtributoExcluido.setModel(new DefaultListModel());
        //lstAtributoExcluido.setEnabled(false);
        lstAtributoSeleccionado.setModel(new DefaultListModel());
        //lstAtributoSeleccionado.setEnabled(false);
        btnOrdenSubir.setEnabled(false);
        btnOrdenBajar.setEnabled(false);
        btnAgregar.setEnabled(false);
        btnQuitar.setEnabled(false);
        btnGuardar.setEnabled(false);
        cod.setEnabled(true);
        
        //lstTipoImpuesto.setEnabled(true);
        txtNombreTipoImpuesto.setEnabled(true);
        chkImporteEditable.setEnabled(true);
        btnCrearImpuesto.setEnabled(true);
        btnModificarTipoImpuesto.setEnabled(true);
        btnEliminarTipoImpuesto.setEnabled(true);
        
        /*lblCodigo.setText("Codigo:");//donde va ir el codigo tipo impuesto
        txtNombreTipoImpuesto.setText("");//nombre de tipo impuesto
        chkImporteEditable.setSelected(false);*/
        /*String elem = lstTipoImpuesto.getSelectedValue();
        String delims = "[ )(]+";
        String[] tokens = elem.split(delims);
        
        boolean editable = false;
        //if("+".equals(tokens[0])) editable = true;
        chkImporteEditable.setSelected(editable);
        
        Integer codigoTI = Integer.parseInt(tokens[1]);*/
        //lblCodigo.setText("Codigo: " + codigoTI.toString());
        
        //txtNombreTipoImpuesto.setText(tokens[2]);//es un vector token q lleva nos ayuda desglosar lo q va en la pantalla
        
        //Integer codigoTI = Integer.parseInt(lblCodigo.getText());
        
        //List<DTOTipoImpAtrib> listaDTOTIA = controlador.modificarTipoImpuesto(codigoTI);
        
        /*DefaultListModel listModelExcAtrib = new DefaultListModel();
        DefaultListModel listModelSelAtrib = new DefaultListModel();
        
        for(DTOTipoImpAtrib dtoTIA:listaDTOTIA){
            DTOAtributo atr = dtoTIA.getDtoAtributo();
            int codigoAtr = atr.getCodigo();
            String nombreAtr = atr.getNombre();
            String tipoAtr = atr.getTipo();
            
            String elemAtr = "("+codigoAtr+") "+nombreAtr+" | "+tipoAtr;
            
            int orden = dtoTIA.getOrden();
            if(orden == -1){
                listModelExcAtrib.addElement(elemAtr);
            }
            else{
                if(orden == listModelSelAtrib.size()){
                    listModelSelAtrib.addElement(elemAtr);
                }
                else if(orden < listModelSelAtrib.size()){
                    listModelSelAtrib.setElementAt(elemAtr, orden);
                }
                else{
                    for(int i = listModelSelAtrib.size(); i < orden; i++){
                        String nulo = "";
                        listModelSelAtrib.addElement(nulo);
                    }
                    listModelSelAtrib.add(orden, elemAtr);
                }
            }
        }*/
        
        lstAtributoExcluido.setEnabled(true);
        //lstAtributoExcluido.setModel(listModelExcAtrib);
        
        lstAtributoSeleccionado.setEnabled(true);
        //lstAtributoSeleccionado.setModel(listModelSelAtrib);
        
        btnOrdenSubir.setEnabled(true);
        btnOrdenBajar.setEnabled(true);
        btnAgregar.setEnabled(true);
        btnQuitar.setEnabled(true);
        btnGuardar.setEnabled(true);
        
        //lstTipoImpuesto.setEnabled(false);
        btnCrearImpuesto.setEnabled(true);
        btnModificarTipoImpuesto.setEnabled(false);
        btnEliminarTipoImpuesto.setEnabled(false);
        
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        start();
    }//GEN-LAST:event_formWindowOpened

    private void btnCrearImpuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearImpuestoActionPerformed
        String nombreTI = txtNombreTipoImpuesto.getText();
        boolean editable = chkImporteEditable.isSelected();
        
        List<DTOAtributo> listaAtrib;
        listaAtrib = controlador.crearTipoImpuesto(nombreTI, editable);
        //listaAtrib.get(0).
        DefaultListModel listModelExcAtrib = new DefaultListModel();
        DefaultListModel listModelSelAtrib = new DefaultListModel();
        
        for(DTOAtributo atrib: listaAtrib){
            int codigoAtr = atrib.getCodigo();
            String nombreAtr = atrib.getNombre();
            String tipoAtr = atrib.getTipo();
            String elem = "(" + codigoAtr + ") " + nombreAtr + " | " + tipoAtr;
            listModelExcAtrib.addElement(elem);
        }
        
        lstAtributoExcluido.setEnabled(true);
        lstAtributoExcluido.setModel(listModelExcAtrib);
        
        lstAtributoSeleccionado.setEnabled(true);
        lstAtributoSeleccionado.setModel(listModelSelAtrib);
        
        btnOrdenSubir.setEnabled(true);
        btnOrdenBajar.setEnabled(true);
        btnAgregar.setEnabled(true);
        btnQuitar.setEnabled(true);
        btnGuardar.setEnabled(true);
        
        //lstTipoImpuesto.setEnabled(false);
        txtNombreTipoImpuesto.setEnabled(false);
        chkImporteEditable.setEnabled(false);
        btnCrearImpuesto.setEnabled(false);
        btnModificarTipoImpuesto.setEnabled(false);
        btnEliminarTipoImpuesto.setEnabled(false);
    }//GEN-LAST:event_btnCrearImpuestoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        int index = lstAtributoExcluido.getSelectedIndex();
        String atrib = lstAtributoExcluido.getSelectedValue();
        
        DefaultListModel listModelSelAtrib = (DefaultListModel)lstAtributoSeleccionado.getModel();
        listModelSelAtrib.addElement(atrib);
        
        DefaultListModel listModelExcAtrib = (DefaultListModel)lstAtributoExcluido.getModel();
        listModelExcAtrib.remove(index);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        int index = lstAtributoSeleccionado.getSelectedIndex();
        String atrib = lstAtributoSeleccionado.getSelectedValue();
        
        DefaultListModel listModelExcAtrib = (DefaultListModel)lstAtributoExcluido.getModel();
        listModelExcAtrib.addElement(atrib);
        
        DefaultListModel listModelSelAtrib = (DefaultListModel)lstAtributoSeleccionado.getModel();
        listModelSelAtrib.remove(index);
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void btnOrdenSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenSubirActionPerformed
        int index = lstAtributoSeleccionado.getSelectedIndex();
        if(index == 0) return;
        
        String elem = lstAtributoSeleccionado.getSelectedValue();
        
        DefaultListModel mod = (DefaultListModel)lstAtributoSeleccionado.getModel();
        mod.remove(index);
        mod.add(index-1, elem);
        lstAtributoSeleccionado.setSelectedIndex(index-1);
    }//GEN-LAST:event_btnOrdenSubirActionPerformed

    private void btnOrdenBajarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenBajarActionPerformed
        int index = lstAtributoSeleccionado.getSelectedIndex();
        String elem = lstAtributoSeleccionado.getSelectedValue();
        
        DefaultListModel mod = (DefaultListModel)lstAtributoSeleccionado.getModel();
        if(index == mod.size()-1) return;
        mod.remove(index);
        mod.add(index+1, elem);
        lstAtributoSeleccionado.setSelectedIndex(index+1);
    }//GEN-LAST:event_btnOrdenBajarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if(txtNombreTipoImpuesto.isEnabled()){
            List<DTOModificarAtributo> atributos = new ArrayList<>();
            String nombre = txtNombreTipoImpuesto.getText();
            boolean editable = chkImporteEditable.isSelected();
            
            DefaultListModel listaModSel = (DefaultListModel)lstAtributoSeleccionado.getModel();
            DefaultListModel listaModExc = (DefaultListModel)lstAtributoExcluido.getModel();
            
            String delims = "[ )(|]+";
            
            for(int i = 0; i < listaModSel.size(); i++){
                String elem = (String)listaModSel.get(i);
                String[] tokens = elem.split(delims);
                DTOModificarAtributo nuevoAtr = new DTOModificarAtributo();
                nuevoAtr.setCodigo(Integer.parseInt(tokens[1]));
                nuevoAtr.setOrden(i);
                nuevoAtr.setDescartar(false);
                atributos.add(nuevoAtr);
            }
            
            for(int i = 0; i < listaModExc.size(); i++){
                String elem = (String)listaModExc.get(i);
                String[] tokens = elem.split(delims);
                DTOModificarAtributo nuevoAtr = new DTOModificarAtributo();
                nuevoAtr.setCodigo(Integer.parseInt(tokens[1]));
                nuevoAtr.setOrden(-1);
                nuevoAtr.setDescartar(true);
                atributos.add(nuevoAtr);
            }
            controlador.guardarModificado(atributos, nombre, editable);
        }
        else{
            List<DTONuevoAtributo> atributos = new ArrayList<>();
            DefaultListModel listaMod = (DefaultListModel)lstAtributoSeleccionado.getModel();
            
            String delims = "[ )(|]+";
            for(int i = 0; i < listaMod.size(); i++){
                String elem = (String)listaMod.get(i);
                String[] tokens = elem.split(delims);
                DTONuevoAtributo nuevoAtr = new DTONuevoAtributo();
                nuevoAtr.setCodigo(Integer.parseInt(tokens[1]));
                nuevoAtr.setOrden(i);
                atributos.add(nuevoAtr);
            }
            controlador.guardarNuevo(atributos);
        }
           ABMTipoImpuesto77 img77 =new ABMTipoImpuesto77();
        img77.setVisible(true);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarTipoImpuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarTipoImpuestoActionPerformed
        /*String elem = lstTipoImpuesto.getSelectedValue();
        String delims = "[ )(]+";
        String[] tokens = elem.split(delims);
        
        boolean editable = false;
        //if("+".equals(tokens[0])) editable = true;
        chkImporteEditable.setSelected(editable);
        
        Integer codigoTI = Integer.parseInt(tokens[1]);
        //lblCodigo.setText("Codigo: " + codigoTI.toString());
        
        //txtNombreTipoImpuesto.setText(tokens[2]);//es un vector token q lleva nos ayuda desglosar lo q va en la pantalla
        
        
        
        List<DTOTipoImpAtrib> listaDTOTIA = controlador.modificarTipoImpuesto(codigoTI);
        
        DefaultListModel listModelExcAtrib = new DefaultListModel();
        DefaultListModel listModelSelAtrib = new DefaultListModel();
        
        for(DTOTipoImpAtrib dtoTIA:listaDTOTIA){
            DTOAtributo atr = dtoTIA.getDtoAtributo();
            int codigoAtr = atr.getCodigo();
            String nombreAtr = atr.getNombre();
            String tipoAtr = atr.getTipo();
            
            String elemAtr = "("+codigoAtr+") "+nombreAtr+" | "+tipoAtr;
            
            int orden = dtoTIA.getOrden();
            if(orden == -1){
                listModelExcAtrib.addElement(elemAtr);
            }
            else{
                if(orden == listModelSelAtrib.size()){
                    listModelSelAtrib.addElement(elemAtr);
                }
                else if(orden < listModelSelAtrib.size()){
                    listModelSelAtrib.setElementAt(elemAtr, orden);
                }
                else{
                    for(int i = listModelSelAtrib.size(); i < orden; i++){
                        String nulo = "";
                        listModelSelAtrib.addElement(nulo);
                    }
                    listModelSelAtrib.add(orden, elemAtr);
                }
            }
        }
        
        lstAtributoExcluido.setEnabled(true);
        lstAtributoExcluido.setModel(listModelExcAtrib);
        
        lstAtributoSeleccionado.setEnabled(true);
        lstAtributoSeleccionado.setModel(listModelSelAtrib);
        
        btnOrdenSubir.setEnabled(true);
        btnOrdenBajar.setEnabled(true);
        btnAgregar.setEnabled(true);
        btnQuitar.setEnabled(true);
        btnGuardar.setEnabled(true);
        
        //lstTipoImpuesto.setEnabled(false);
        btnNuevoTipoImpuesto.setEnabled(false);
        btnModificarTipoImpuesto.setEnabled(false);
        btnEliminarTipoImpuesto.setEnabled(false);*/
    }//GEN-LAST:event_btnModificarTipoImpuestoActionPerformed

    private void btnEliminarTipoImpuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTipoImpuestoActionPerformed
       // String elem = lstTipoImpuesto.getSelectedValue();
       // String delims = "[ )(]+";
        //String[] tokens = elem.split(delims);
     // int codigo = Integer.parseInt(tokens[1]);
        
        //controlador.eliminarTipoImpuesto(codigo);
        
        //start();
    }//GEN-LAST:event_btnEliminarTipoImpuestoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ABMTipoImpuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ABMTipoImpuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ABMTipoImpuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ABMTipoImpuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ABMTipoImpuesto78().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCrearImpuesto;
    private javax.swing.JButton btnEliminarTipoImpuesto;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificarTipoImpuesto;
    private javax.swing.JButton btnOrdenBajar;
    private javax.swing.JButton btnOrdenSubir;
    private javax.swing.JButton btnQuitar;
    public static javax.swing.JCheckBox chkImporteEditable;
    private javax.swing.JLabel cod;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JList<String> lstAtributoExcluido;
    private javax.swing.JList<String> lstAtributoSeleccionado;
    public static javax.swing.JTextField txtNombreTipoImpuesto;
    // End of variables declaration//GEN-END:variables
}
